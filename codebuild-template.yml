AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  Course: Codebuild automation
Description: Creates a codebuild to deploy lambdas

Parameters:
  Env:
    Type: String
  BuildSpec:
    Type: String
    Description: "Path to locate buildSpec"
  CodeBuildType:
    Type: String
    Description: "Type of codebuild to name these codebuild resources"
  Location:
    Type: String
    Description: "Git repository"
  SecondaryLocation:
    Type: String
    Description: "Git repository"

Resources:
  CodebuildSamDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${Env}-${CodeBuildType}"
      ServiceRole: !Ref CodeBuildRole
      Description: !Sub "Codebuild base template for type: ${CodeBuildType}"
      Source:
        Type: "GITHUB"
        BuildSpec: !Ref BuildSpec
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: false
        InsecureSsl: false
        Location: !Ref Location
      SecondarySources:
        - Type: "GITHUB"
          Location: !Ref SecondaryLocation
          GitCloneDepth: 1
          GitSubmodulesConfig:
            FetchSubmodules: false
          SourceIdentifier: "lambdas"
      TimeoutInMinutes: 5
      QueuedTimeoutInMinutes: 30
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:5.0
        ComputeType: BUILD_GENERAL1_SMALL
        ImagePullCredentialsType: "CODEBUILD"
        PrivilegedMode: false
        EnvironmentVariables:
          -
            Name: "Env"
            Type: "PLAINTEXT"
            Value: !Ref Env
      Tags: 
        - Key: Env
          Value: !Ref Env
        - Key: Course
          Value: DevOps
      BadgeEnabled: false
      LogsConfig: 
        CloudWatchLogs:
          Status: ENABLED
          GroupName: lambda-deploy-log
      ConcurrentBuildLimit: 3
      SourceVersion: master
#      Triggers: 
#        Webhook: true
#        FilterGroups:
#          - - Type: Event
#              Pattern: PUSH

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to be used by codebuild
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Sub "codebuild-${Env}-${CodeBuildType}-role"
  
#  RootInstanceProfile:
#    Type: AWS::IAM::InstanceProfile
#    Properties:
#      Roles:
#        - !Ref CodeBuildRole
  
  Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${Env}-codebuild-${CodeBuildType}-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'lambda:CreateAlias'
              - 'lambda:CreateFunction'
              - 'lambda:GetFunction'
              - 'lambda:GetFunctionCodeSigningConfig'
              - 'lambda:ListTags'
              - 'lambda:ListVersionsByFunction'
              - 'lambda:PublishVersion'
              - 'lambda:TagResource'
              - 'lambda:UpdateAlias'
              - 'lambda:UpdateFunctionCode'
              - 'lambda:UpdateFunctionConfiguration'
            Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*"
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
            Resource:
              - !Sub "arn:aws:s3:::lambdas-zips-${AWS::Region}-*"
              - !Sub "arn:aws:s3:::lambdas-zips-${AWS::Region}-*/*"
          - Effect: Allow
            Action:
              - 'iam:*'
            Resource: "*"
          - Effect: Allow
            Action: 
              - 'cloudformation:*'
            Resource:
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*'
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31'
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Resource:
              - !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*"
              - !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*/*"
          - Effect: Allow
            Action:
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:lambda-deploy-log:log-stream:*"
          - Effect: Allow
            Action:
              - 'codestar-connections:UseConnection'
            Resource:
              - !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/*"
      Roles:
        - !Ref CodeBuildRole